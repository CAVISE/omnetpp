#!/bin/sh

if [ "$what" != "omnest" ]; then
  # if "what" is not "omnest" we build omnetpp by default
  export what=omnetpp
fi

if [ "$BUILDID"x = "x" ]; then
  # generate our own build identifier
  export BUILDID=`date +%y%m%d`-`git describe --tags | awk -F '-g' '{print $2;}'`
fi
if [ "$VERSION"x = "x" ]; then
  # undefined version number
  export VERSION=unknown
fi

# by default run the build in off-line. should specify OFFLINE=no for maven to update dependencies on-line
export OFFLINE_FLAG=--offline
if [ "$OFFLINE" = "no" ]; then
  export OFFLINE_FLAG=
fi

cd $(dirname $0)/../../..

echo Copying 'ui' to 'out/ui' ...
rm -rf out/ui
mkdir -p out
cp -r ui out

echo Copying 'python/omnetpp/scave' to 'out/ui'
cp python/omnetpp/scave/*.py out/ui/org.omnetpp.scave.pychart/python/omnetpp/scave/

touch out/ui/org.omnetpp.ide.nativelibs.linux.x86_64/libopplibs.so
touch out/ui/org.omnetpp.ide.nativelibs.win32.x86_64/opplibs.dll
touch out/ui/org.omnetpp.ide.nativelibs.macosx/libopplibs.jnilib

echo Building $what IDE version: $VERSION with buildID: $BUILDID
cd out/ui

mvn clean verify $OFFLINE_FLAG -Dwhat=$what -DforceContextQualifier=$BUILDID || { echo --- error during compiling/packaging Java IDE parts ---; exit 1;}

# post process the final layout. Merge the plugins and features directory of all platforms to save space
cd releng/org.omnetpp.ide.$what.product/target/products/org.omnetpp.ide.$what.product || { echo --- error changing to the final result directory ---; exit 1;}

echo Post processing IDE installation files...
rm -rf ide
mkdir -p ide

# Linux
cp -rl linux/gtk/x86_64 ide
mv ide/x86_64 ide/linux64
cp -rlf ide/linux64/plugins ide
cp -rlf ide/linux64/features ide
rm -rf ide/linux64/plugins
rm -rf ide/linux64/features
# we have to adjust the config.ini manually, bacause tycho is not properly updating it form the .product file
echo org.eclipse.update.reconcile=false >>ide/linux64/configuration/config.ini
echo osgi.instance.area.default=../samples >>ide/linux64/configuration/config.ini

# Windows
cp -rl win32/win32/x86_64 ide
mv ide/x86_64 ide/win64
cp -rlf ide/win64/plugins ide
cp -rlf ide/win64/features ide
rm -rf ide/win64/plugins
rm -rf ide/win64/features
# we have to adjust the config.ini manually, bacause tycho is not properly updating it form the .product file
echo org.eclipse.update.reconcile=false >>ide/win64/configuration/config.ini
echo osgi.instance.area.default=../samples >>ide/win64/configuration/config.ini

# macOS
cp -rl macosx/cocoa/x86_64 ide
mv ide/x86_64 ide/macosx
cp -rlf ide/macosx/Eclipse.app/Contents/Eclipse/plugins ide
cp -rlf ide/macosx/Eclipse.app/Contents/Eclipse/features ide
rm -rf ide/macosx/Eclipse.app/Contents/Eclipse/plugins
rm -rf ide/macosx/Eclipse.app/Contents/Eclipse/features
# we have to adjust the config.ini manually, bacause tycho is not properly updating it form the .product file
echo org.eclipse.update.reconcile=false >>ide/macosx/Eclipse.app/Contents/Eclipse/configuration/config.ini
echo osgi.instance.area.default=../../../../../samples >>ide/macosx//Eclipse.app/Contents/Eclipse/configuration/config.ini
