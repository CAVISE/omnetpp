#=====================================================================
#
# toplevel makefile for OMNeT++ libraries and programs
#
#=====================================================================

#
# Directories
#
OMNETPP_BIN_DIR =       @OMNETPP_BIN_DIR@
OMNETPP_LIB_DIR =       @OMNETPP_LIB_DIR@
OMNETPP_SRC_DIR =       @OMNETPP_SRC_DIR@
OMNETPP_INCL_DIR =      @OMNETPP_INCL_DIR@
OMNETPP_DOC_DIR =       @OMNETPP_DOC_DIR@
OMNETPP_SAMPLES_DIR =   @OMNETPP_SAMPLES_DIR@
OMNETPP_TEST_DIR =      @OMNETPP_TEST_DIR@

#=====================================================================
#
# Main targets
#
#=====================================================================


all: check-env components

components: libs progs samples_


#=====================================================================
#
# OMNeT++ components
#
#=====================================================================

LIBS=nedxml sim envir cmdenv tkenv
PROGS=utils nedc gned plove scalars # NOTE: plove-old is also available, can be run from its source dir
SAMPLES=aloha cqn dyna fddi fifo hcube hist neddemo p-to-p queueing routing queues tictoc tokenring sockets

#
# Group targets. Note that utils has to be built BEFORE other libs and progs
# because tcl2c might be needed to build tkenv or gned.
#
libs: $(LIBS)
progs: $(PROGS)
samples_: $(SAMPLES)

$(LIBS) $(PROGS) makefiles: utils
$(PROGS): libs
$(SAMPLES): libs progs

#
# Libraries
#

sim:
	cd $(OMNETPP_SRC_DIR)/sim && $(MAKE)

nedxml:
	cd $(OMNETPP_SRC_DIR)/nedxml && $(MAKE)

envir:
	cd $(OMNETPP_SRC_DIR)/envir && $(MAKE)

cmdenv:
	cd $(OMNETPP_SRC_DIR)/cmdenv && $(MAKE)

tkenv:
	cd $(OMNETPP_SRC_DIR)/tkenv && $(MAKE)

#
# Programs
#

nedc:
	cd $(OMNETPP_SRC_DIR)/nedc && $(MAKE)

gned:
	cd $(OMNETPP_SRC_DIR)/gned && $(MAKE)

scalars:
	cd $(OMNETPP_SRC_DIR)/scalars && $(MAKE)

plove:
	cd $(OMNETPP_SRC_DIR)/plove && $(MAKE)

utils:
	cd $(OMNETPP_SRC_DIR)/utils &&  $(MAKE)

#
# Sample programs
#

aloha:
	cd $(OMNETPP_SAMPLES_DIR)/$@ && $(MAKE)

cqn:
	cd $(OMNETPP_SAMPLES_DIR)/$@ && $(MAKE)

dyna:
	cd $(OMNETPP_SAMPLES_DIR)/$@ && $(MAKE)

fddi:
	cd $(OMNETPP_SAMPLES_DIR)/$@ && $(MAKE)

fifo:
	cd $(OMNETPP_SAMPLES_DIR)/$@ && $(MAKE)

hcube:
	cd $(OMNETPP_SAMPLES_DIR)/$@ && $(MAKE)

hist:
	cd $(OMNETPP_SAMPLES_DIR)/$@ && $(MAKE)

neddemo:
	cd $(OMNETPP_SAMPLES_DIR)/$@ && $(MAKE)

p-to-p:
	cd $(OMNETPP_SAMPLES_DIR)/$@ && $(MAKE)

queueing:
	cd $(OMNETPP_SAMPLES_DIR)/$@ && $(MAKE)

routing:
	cd $(OMNETPP_SAMPLES_DIR)/$@ && $(MAKE)

queues:
	cd $(OMNETPP_SAMPLES_DIR)/$@ && $(MAKE)

tictoc:
	cd $(OMNETPP_SAMPLES_DIR)/$@ && $(MAKE)

tokenring:
	cd $(OMNETPP_SAMPLES_DIR)/$@ && $(MAKE)

sockets:
	cd $(OMNETPP_SAMPLES_DIR)/$@ && $(MAKE)

#
# Documentation
#
apis:
	cd $(OMNETPP_DOC_DIR)/src && $(MAKE) apis

docu:
	cd $(OMNETPP_DOC_DIR)/src && $(MAKE)

#
# Test
#
tests: libs progs
	cd $(OMNETPP_TEST_DIR) && $(MAKE)

#=====================================================================
#
# Utilities
#
#=====================================================================

check-env:
	@probefile=__probe__; \
	if (echo '' >@OMNETPP_BIN_DIR@/$$probefile && \
	    chmod +x @OMNETPP_BIN_DIR@/$$probefile) 2>/dev/null; then \
	  if $$probefile >/dev/null 2>/dev/null; then :; else \
	    echo '  *** Warning: @OMNETPP_BIN_DIR@ is not in the path, some components may not build!'; \
	  fi; \
	else \
	  echo '  *** Warning: Cannot write to @OMNETPP_BIN_DIR@, does it exist?'; \
	fi; \
	rm -f @OMNETPP_BIN_DIR@/$$probefile; \
	if uname | grep "CYGWIN" >/dev/null; then :; else \
	  if echo $$LD_LIBRARY_PATH | grep "@OMNETPP_LIB_DIR@" >/dev/null; then :; else \
	    echo '  *** Warning: Looks like @OMNETPP_LIB_DIR@ is not in LD_LIBRARY_PATH, shared libs may not work!'; \
	  fi; \
	fi

clean:
	for i in $(LIBS) $(PROGS); do \
	    (cd $(OMNETPP_SRC_DIR)/$$i && $(MAKE) clean); \
	done
	- rm $(OMNETPP_BIN_DIR)/*
	- rm $(OMNETPP_LIB_DIR)/*
	for i in $(SAMPLES); do \
	    (cd $(OMNETPP_SAMPLES_DIR)/$$i && $(MAKE) clean); \
	done
	cd $(OMNETPP_TEST_DIR) && $(MAKE) clean

depend: utils
	for i in $(LIBS) $(PROGS); do \
	    (cd $(OMNETPP_SRC_DIR)/$$i && $(MAKE) depend); \
	done
	for i in $(SAMPLES); do \
	    (cd $(OMNETPP_SAMPLES_DIR)/$$i && $(MAKE) depend); \
	done

makefiles:
	for i in $(SAMPLES); do \
	    (cd $(OMNETPP_SAMPLES_DIR)/$$i && (opp_makemake -f; opp_makemake -f -m)); \
	done

